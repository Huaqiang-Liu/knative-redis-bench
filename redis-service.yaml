apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: redis-benchmark
  namespace: default
spec:
  template:
    metadata:
      annotations:
        # autoscaling.knative.dev/targetUtilizationPercentage: "70" # 设置目标利用率
        autoscaling.knative.dev/minScale: "1"
        autoscaling.knative.dev/maxScale: "80"
        autoscaling.knative.dev/target: "1"    # 设置每个 Pod 期望的并发数
        # autoscaling.knative.dev/class: "kpa.autoscaling.knative.dev" # 使用KPA（Knative Pod Autoscaler）
        # autoscaling.knative.dev/metric: "concurrency"  # 基于并发请求进行伸缩
    spec:
      containers:
        - image: ericarthurblair/redis-benchmark@sha256:8e0b4d37f1fd480e3bf289c56b2d2afd6863b6f1d3fa727dcfc2911f69d2ba73
          imagePullPolicy: IfNotPresent
          env:
            - name: REDIS_HOST
              value: "redis-master"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: redis-password
          readinessProbe: null
          volumeMounts:
            - name: log-volume
              mountPath: /var/log
      volumes:
        - name: log-volume
          emptyDir: {}
